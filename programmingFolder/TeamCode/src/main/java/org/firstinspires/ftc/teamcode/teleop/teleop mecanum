package org.firstinspires.ftc.teamcode.Teleop;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;

import static org.firstinspires.ftc.teamcode.Teleop.constants.*;


@TeleOp (name="te", group="teloop")
public class mecanum extends Teleop {
    //Hardware
    private DcMotor rearLeft,rearRight,frontLeft,frontRight, arm, arm2;
    private Servo rightFoundation, leftFoundation, grabber, sideServo;
    private CRServo armServo;
    //Constants






//



    private void printStatus() {

        telemetry.update();
    }


    @Override
    public void runOpMode() throws InterruptedException {



        rearLeft = hardwareMap.get(DcMotor.class, "rearLeft");
        rearRight= hardwareMap.get(DcMotor.class, "rearRight");
        frontLeft = hardwareMap.get(DcMotor.class, "frontLeft");
        frontRight = hardwareMap.get(DcMotor.class, "frontRight");

        rearRight.setDirection(DcMotor.Direction.REVERSE);
        frontRight.setDirection(DcMotorSimple.Direction.REVERSE);




        // zero power behavior
        rearLeft.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rearRight.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        frontLeft.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        frontRight.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);


        // set motor to run using encoder
        telemetry.addData("Ready!", "Press Start.");
        // wait for play

        waitForStart();




        while (opModeIsActive()) {
            drive();

        }

    }





    public void drive(){
//        double frontleftPower= gamepad1.left_stick_y+gamepad1.left_stick_x-gamepad1.right_stick_x;
//        double rearleftPower = gamepad1.left_stick_y-gamepad1.left_stick_x-gamepad1.right_stick_x;
//        double frontrightPower = gamepad1.left_stick_y+gamepad1.left_stick_x+gamepad1.right_stick_x;
//        double rearrightPower = gamepad1.left_stick_y-gamepad1.left_stick_x+gamepad1.right_stick_x;



        double frontleftPower= -gamepad1.left_stick_y+gamepad1.left_stick_x+gamepad1.right_stick_x;
        double rearleftPower = -gamepad1.left_stick_y-gamepad1.left_stick_x+gamepad1.right_stick_x;
        double frontrightPower = -gamepad1.left_stick_y-gamepad1.left_stick_x-gamepad1.right_stick_x;
        double rearrightPower = -gamepad1.left_stick_y+gamepad1.left_stick_x-gamepad1.right_stick_x;

        telemetry.addData(" fl encoder",frontLeft.getCurrentPosition());
        telemetry.addData(" fr encoder",frontRight.getCurrentPosition());
        telemetry.addData(" rr encoder",rearRight.getCurrentPosition());
        telemetry.addData(" rf encoder",rearLeft.getCurrentPosition());
        frontleftPower= Range.clip(frontleftPower,-1,+1);
        frontrightPower= Range.clip(frontrightPower,-1,+1);
        rearleftPower= Range.clip(rearleftPower,-1,+1);
        rearrightPower= Range.clip(rearrightPower,-1,+1);

        rearRight.setPower(rearrightPower);
        rearLeft.setPower(rearleftPower);
        frontRight.setPower(frontrightPower);
        frontLeft.setPower(frontleftPower);
    }
}
